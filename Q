[1mdiff --git a/src/components/Windows/Desktop/Desktop.js b/src/components/Windows/Desktop/Desktop.js[m
[1mindex f545432..c9de75d 100644[m
[1m--- a/src/components/Windows/Desktop/Desktop.js[m
[1m+++ b/src/components/Windows/Desktop/Desktop.js[m
[36m@@ -92,44 +92,43 @@[m [mclass Desktop extends Component {[m
     addedfile: file => {[m
       const { name, size, type } = file;[m
       const upload_id = this.getUploadId();[m
[32m+[m[32m      // todo: dispatch check upload readiness action[m
       fetch('/upload_start', {method: 'get', credentials: 'include'})[m
         .then(response => {[m
           response.json().then( responseObject => {[m
[31m-            console.log(responseObject);[m
[31m-[m
[31m-            // const { year, month, day, hours, minutes, seconds, milliseconds } = dateObject;[m
[31m-            // Evaporate.create(evap_config)[m
[31m-            //   .then([m
[31m-            //     evaporate => {[m
[31m-            //       evaporate.add({[m
[31m-            //         n[m
[31m-            // ame: `${upload_id}/${year}/${month}/${day}/${hours}${minutes}${seconds}${milliseconds}/${name}`,[m
[31m-            //         file,[m
[31m-            //         xAmzHeadersAtInitiate : {[m
[31m-            //           'x-amz-acl': 'public-read'[m
[31m-            //         },[m
[31m-            //         // progress: progressVal => {console.log('progress!!', progressVal)},[m
[31m-            //         info: info => {},[m
[31m-            //         error: error => {},[m
[31m-            //         warn: warn => {},[m
[31m-            //         complete: (xhr, awsObjectKey, stats) => {[m
[31m-            //           console.log(xhr, awsObjectKey, stats);[m
[31m-            //           fetch('/upload_complete', {method: 'post', credentials: 'include'})[m
[31m-            //             .then(response => {[m
[31m-            //               return response.json().then(responseObject => {[m
[31m-            //                 console.log(responseObject);[m
[31m-            //               });[m
[31m-            //             }).catch(err => {[m
[31m-            //               return err;[m
[31m-            //           })[m
[31m-            //         }[m
[31m-            //       })[m
[31m-            //         .then([m
[31m-            //           awsKey => { },[m
[31m-            //           reason => { }[m
[31m-            //         ).catch(error=>{console.log(error);})[m
[31m-            //     },[m
[31m-            //     reason => {});[m
[32m+[m[32m            const { size, date: { year, month, day, hours, minutes, seconds, milliseconds } } = responseObject;[m
[32m+[m[32m            //todo: upload start action[m
[32m+[m[32m            Evaporate.create(evap_config)[m
[32m+[m[32m              .then([m
[32m+[m[32m                evaporate => {[m
[32m+[m[32m                  evaporate.add({[m
[32m+[m[32m                    name: `${upload_id}/${year}/${month}/${day}/${hours}${minutes}${seconds}${milliseconds}/${name}`,[m
[32m+[m[32m                    file,[m
[32m+[m[32m                    xAmzHeadersAtInitiate : {[m
[32m+[m[32m                      'x-amz-acl': 'public-read'[m
[32m+[m[32m                    },[m
[32m+[m[32m                    // progress: progressVal => {console.log('progress!!', progressVal)},[m
[32m+[m[32m                    info: info => {},[m
[32m+[m[32m                    error: error => {},[m
[32m+[m[32m                    warn: warn => {},[m
[32m+[m[32m                    complete: (xhr, awsObjectKey, stats) => {[m
[32m+[m[32m                      console.log(xhr, awsObjectKey, stats);[m
[32m+[m[32m                      fetch('/upload_complete', {method: 'post', credentials: 'include'})[m
[32m+[m[32m                        .then(response => {[m
[32m+[m[32m                          return response.json().then(responseObject => {[m
[32m+[m[32m                            console.log(responseObject);[m
[32m+[m[32m                          });[m
[32m+[m[32m                        }).catch(err => {[m
[32m+[m[32m                          return err;[m
[32m+[m[32m                      })[m
[32m+[m[32m                    }[m
[32m+[m[32m                  })[m
[32m+[m[32m                    .then([m
[32m+[m[32m                      awsKey => { },[m
[32m+[m[32m                      reason => { }[m
[32m+[m[32m                    ).catch(error=>{console.log(error);})[m
[32m+[m[32m                },[m
[32m+[m[32m                reason => {});[m
           });[m
         })[m
         .catch(error => {[m
[1mdiff --git a/src/server.js b/src/server.js[m
[1mindex d8e0162..89a5d26 100755[m
[1m--- a/src/server.js[m
[1m+++ b/src/server.js[m
[36m@@ -193,25 +193,24 @@[m [mapp.get('/failure', async(req, res) => {[m
 * */[m
 app.get('/upload_start', (req, res) => {[m
   const id = req.user ? req.user.id : 1;[m
[32m+[m[32m  const now = new Date(Date.now());[m
[32m+[m[32m  const date = {[m
[32m+[m[32m    year: now.getFullYear(),[m
[32m+[m[32m    month: now.getMonth() + 1, // getMonth is 0 indexed.[m
[32m+[m[32m    day: now.getDate(),[m
[32m+[m[32m    hours: now.getHours(),[m
[32m+[m[32m    minutes: now.getMinutes(),[m
[32m+[m[32m    seconds: now.getSeconds(),[m
[32m+[m[32m    milliseconds: now.getMilliseconds()[m
[32m+[m[32m  };[m
[32m+[m
   doesObjectExist(`${id}/`).then(response => {[m
     getDirectorySize(`${id}/`).then(bucketInformation => {[m
[31m-      res.status(200).send({ size: 0 });[m
[32m+[m[32m      res.status(200).send({ size: 0, date });[m
     });[m
   }).catch(error => {[m
     //No Object Found![m
   });[m
[31m-[m
[31m-  // const now = new Date(Date.now());[m
[31m-  // const date = {[m
[31m-  //   year: now.getFullYear(),[m
[31m-  //   month: now.getMonth() + 1, // getMonth is 0 indexed.[m
[31m-  //   day: now.getDate(),[m
[31m-  //   hours: now.getHours(),[m
[31m-  //   minutes: now.getMinutes(),[m
[31m-  //   seconds: now.getSeconds(),[m
[31m-  //   milliseconds: now.getMilliseconds()[m
[31m-  // };[m
[31m-  // res.send(date);[m
 });[m
 [m
 app.post('/upload_complete', (req, res) => {[m
