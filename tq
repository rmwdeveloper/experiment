[1mdiff --git a/src/components/Windows/Authenticator/Authenticator.css b/src/components/Windows/Authenticator/Authenticator.css[m
[1mindex f0140db..9c15ce0 100644[m
[1m--- a/src/components/Windows/Authenticator/Authenticator.css[m
[1m+++ b/src/components/Windows/Authenticator/Authenticator.css[m
[36m@@ -19,7 +19,9 @@[m
   justify-content: center;[m
   flex-direction: column;[m
 }[m
[31m-[m
[32m+[m[32m.controlGroupError {[m
[32m+[m[32m  color: red;[m
[32m+[m[32m}[m
 #registerEmail, #registerUsername, #registerPassword, .controlGroup label {[m
   display: block;[m
 }[m
[1mdiff --git a/src/components/Windows/Authenticator/Authenticator.js b/src/components/Windows/Authenticator/Authenticator.js[m
[1mindex d0525e2..410e09a 100644[m
[1m--- a/src/components/Windows/Authenticator/Authenticator.js[m
[1m+++ b/src/components/Windows/Authenticator/Authenticator.js[m
[36m@@ -36,23 +36,38 @@[m [mclass Authenticator extends Component {[m
     xhr.send(JSON.stringify({ email: data.get('email'), username: data.get('username'), password: data.get('password') }));[m
   }[m
   render() {[m
[31m-    const { registering, toggleRegisterMode } = this.props;[m
[31m-    console.log(this.state.errors);[m
[32m+[m[32m    const { registering, toggleRegisterMode } = this.props; // todo: refactor this bulky render.[m
[32m+[m[32m    const { errors } = this.state;[m
[32m+[m[32m    const usernameErrors = errors.filter(value => { return value.path === 'username'; });[m
[32m+[m[32m    const emailErrors = errors.filter(value => { return value.path === 'email'; });[m
[32m+[m[32m    const passwordErrors = errors.filter(value => { return value.path === 'password'; });[m
     const mode = registering ? 'Register' : 'Login';[m
[32m+[m[32m    let usernameClassnames = styles.controlGroup;[m
[32m+[m[32m    let emailClassnames = styles.controlGroup;[m
[32m+[m[32m    let passwordClassnames = styles.controlGroup;[m
[32m+[m[32m    if (usernameErrors.length > 0) { usernameClassnames += ` ${styles.controlGroupError}`; }[m
[32m+[m[32m    if (emailErrors.length > 0) { emailClassnames += ` ${styles.controlGroupError}`; }[m
[32m+[m[32m    if (passwordErrors.length > 0) { passwordClassnames += ` ${styles.controlGroupError}`; }[m
[32m+[m
     return <div className={styles.root}>[m
       <form id={styles.registrationForm} onSubmit={this.handleSubmit}>[m
[31m-        <div className={styles.controlGroup}>[m
[32m+[m[32m        <div className={emailClassnames}>[m
           <label htmlFor={styles.registerEmail}>Email</label>[m
[32m+[m[32m          {[m
[32m+[m[32m            emailErrors.map( errorObject => {[m
[32m+[m[32m                return <span className={styles.errorMessage}>{errorObject.message}</span>;[m
[32m+[m[32m              })[m
[32m+[m[32m          }[m
           <input name="email" type="email" id={styles.registerEmail} />[m
         </div>[m
         {[m
            registering ?[m
[31m-             <div className={styles.controlGroup}>[m
[32m+[m[32m             <div className={usernameClassnames}>[m
               <label htmlFor={styles.registerUsername}>Username</label>[m
               <input name="username" type="text" id={styles.registerUsername} />[m
             </div> : null[m
         }[m
[31m-        <div className={styles.controlGroup}>[m
[32m+[m[32m        <div className={passwordClassnames}>[m
           <label htmlFor={styles.registerPassword}>Password</label>[m
           <input name="password" type="password" id={styles.registerPassword} />[m
         </div>[m
